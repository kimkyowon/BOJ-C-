#include<bits/stdc++.h>
using namespace std;
int indegree[1001];
vector<int> graph[1001];
int dp[1001];
int v,e;

void topologySort(){
	queue<int> q;
	for(int i=1; i<=v; i++){
		if(indegree[i]==0){
			q.push(i);
			dp[i]=1;
		}
	}
	while(!q.empty()){
		int now=q.front();
		q.pop();
		for(int i=0; i<graph[now].size(); i++){
			indegree[graph[now][i]]-=1;
			if(indegree[graph[now][i]]==0){
				q.push(graph[now][i]);
				dp[graph[now][i]]=max(dp[now]+1,dp[graph[now][i]]);//연결된 값들 중에 dp값이 가장 큰거를 골라야 함.(어차피 연결된건 다 들어야 하므로 제일 오래 걸리는 시간이 최단 시간임)
			}
		}
	}
}
int main(void){
	cin>>v>>e;
	for(int i=1; i<=e; i++){
		int start,end;
		cin>>start>>end;
		graph[start].push_back(end);
		indegree[end]++;
	}
	topologySort();
	for(int i=1; i<=v; i++){
		cout<<dp[i]<<' ';
	}
}
